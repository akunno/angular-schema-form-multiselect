angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/multiselect/multiselect.html",'<div class="form-group {{form.htmlClass}} schema-form-multiselect" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><select ng-model="$$value$$" ng-model-options="form.ngModelOptions" multiple="multiple" sf-multiple="form.multiple" ng-disabled="form.readonly" sf-changed="form" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" ng-required="form.required" name="{{form.key.slice(-1)[0]}}" multiselect-config="{{form.multiselectConfig}}"></select><div class="help-block" sf-message="form.description"></div></div>')}]),angular.module("schemaForm").directive("sfMultiple",["$http",function(e){var t={maxHeight:305,enableCaseInsensitiveFiltering:!1,inheritClass:!1,nSelectedText:"selected.",templates:{li:'<li class="multiSelectCheckbox"><a href="javascript:void(0);"><label></label></a></li>'}},o={};return{restrict:"A",require:["ngModel"],scope:{ngModel:"="},link:function(e,r,l){return r.multiselect?(l.multiselectConfig?angular.extend(o,t,JSON.parse(l.multiselectConfig)):o=t,console.log(t),console.log(o),void e.$watch(l.ngIf,function(){console.log("init multiselect"),r.multiselect(o)})):void console.warn("bootstrap-multiselect not present.")}}}]),angular.module("schemaForm").directive("schemaValidate",["sfUnselect",function(e){return{priority:600,link:function(t,o,r){var l;if(t.options&&t.options.formDefaults){var s=t.options.formDefaults.destroyStrategy,i=void 0===s||""===s||null===s||"retain"===s;i?l=s:(console.warn("Unrecognized formDefaults.destroyStrategy: '%s'. Used undefined instead.",s),l=void 0)}t.$on("$destroy",function(){function o(o){var r=null===o||""===o||void 0==typeof o;r||(o=l),e(t.form.key,t.model,o)}function s(){a=i.schema?i.schema.type:null}var i=t.$eval(r.schemaValidate),n=i.destroyStrategy,a=s();n&&"retain"!==n?(console.warn("Unrecognized destroyStrategy: '%s'. Used default instead.",n),n=l):"string"!==a&&""===n&&(console.warn("Attempted to use empty string destroyStrategy on non-string form type. Used default instead."),n=l),"retain"!==n&&o(n)})}}}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,o){t.addMapping("bootstrapDecorator","multiselect","directives/decorators/bootstrap/multiselect/multiselect.html"),t.createDirective("multiselect","directives/decorators/bootstrap/multiselect/multiselect.html")}]),angular.module("schemaForm").factory("sfUnselect",["sfPath",function(e){var t=/^\d+$/;return function(o,r,l){r||(r=this);var s="string"==typeof o?e.parse(o):o;if(1===s.length)return r[s[0]]=l,r;if("undefined"==typeof r[s[0]]){var i=t.test(s[1]);if(i)return void 0;s.length>2&&(r[s[0]]={})}for(var n=r[s[0]],a=1;a<s.length;a++){if(""===s[a])return void 0;var c=n[s[a]];if(a===s.length-1)return n[s[a]]=l,l;if("undefined"==typeof c||null===c)return void 0;n=c}return n}}]);